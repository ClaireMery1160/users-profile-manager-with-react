{"ast":null,"code":"export default class PokemonService {\n  static getPokemons() {\n    return fetch('http://localhost:3001/pokemons').then(response => response.json()).catch(error => this.handleError(error));\n  }\n\n  static getPokemon(id) {\n    return fetch(`http://localhost:3001/pokemons/${id}`).then(response => response.json()).then(data => this.isEmpty(data) ? null : data).catch(error => this.handleError(error));\n  }\n\n  static updatePokemon(pokemon) {\n    return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n      method: 'PUT',\n      body: JSON.stringify(pokemon),\n      headers: {\n        'Content-type': 'application/json'\n      }\n    }).then(response => response.json()).catch(error => this.handleError(error));\n  }\n\n  static deletePokemon(pokemon) {\n    return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-type': 'application/json'\n      }\n    }).then(response => response.json()).catch(error => this.handleError(error));\n  }\n\n  static isEmpty(data) {\n    return Object.keys(data).length === 0;\n  }\n\n  static handleError(error) {\n    console.log(error);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/c_mer/OneDrive/Documents/formations/Udemy_React/react-profiles-app/src/services/pokemon-service.ts"],"names":["PokemonService","getPokemons","fetch","then","response","json","catch","error","handleError","getPokemon","id","data","isEmpty","updatePokemon","pokemon","method","body","JSON","stringify","headers","deletePokemon","Object","keys","length","console","log"],"mappings":"AAGA,eAAe,MAAMA,cAAN,CAAqB;AAEhB,SAAXC,WAAW,GAAuB;AACvC,WAAOC,KAAK,CAAC,gCAAD,CAAL,CACJC,IADI,CACCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADb,EAEJC,KAFI,CAEEC,KAAK,IAAI,KAAKC,WAAL,CAAiBD,KAAjB,CAFX,CAAP;AAGD;;AAEgB,SAAVE,UAAU,CAACC,EAAD,EAAoC;AACnD,WAAOR,KAAK,CAAE,kCAAiCQ,EAAG,EAAtC,CAAL,CACJP,IADI,CACCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADb,EAEJF,IAFI,CAECQ,IAAI,IAAI,KAAKC,OAAL,CAAaD,IAAb,IAAqB,IAArB,GAA4BA,IAFrC,EAGJL,KAHI,CAGEC,KAAK,IAAI,KAAKC,WAAL,CAAiBD,KAAjB,CAHX,CAAP;AAID;;AAEmB,SAAbM,aAAa,CAACC,OAAD,EAAoC;AACtD,WAAOZ,KAAK,CAAE,kCAAiCY,OAAO,CAACJ,EAAG,EAA9C,EAAiD;AACzDK,MAAAA,MAAM,EAAE,KADiD;AAEzDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,OAAf,CAFmD;AAGzDK,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB;AAHgD,KAAjD,CAAL,CAKNhB,IALM,CAKDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EALX,EAMNC,KANM,CAMAC,KAAK,IAAI,KAAKC,WAAL,CAAiBD,KAAjB,CANT,CAAP;AAOD;;AAEmB,SAAba,aAAa,CAACN,OAAD,EAAoC;AACtD,WAAOZ,KAAK,CAAE,kCAAiCY,OAAO,CAACJ,EAAG,EAA9C,EAAiD;AACzDK,MAAAA,MAAM,EAAE,QADiD;AAEzDI,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB;AAFgD,KAAjD,CAAL,CAINhB,IAJM,CAIDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAJX,EAKNC,KALM,CAKAC,KAAK,IAAI,KAAKC,WAAL,CAAiBD,KAAjB,CALT,CAAP;AAOD;;AAEa,SAAPK,OAAO,CAACD,IAAD,EAAwB;AACpC,WAAOU,MAAM,CAACC,IAAP,CAAYX,IAAZ,EAAkBY,MAAlB,KAA6B,CAApC;AACD;;AAEiB,SAAXf,WAAW,CAACD,KAAD,EAAoB;AAClCiB,IAAAA,OAAO,CAACC,GAAR,CAAYlB,KAAZ;AACH;;AAzCiC","sourcesContent":["import { pathToFileURL } from \"url\";\r\nimport Pokemon from \"../models/pokemon\";\r\n \r\nexport default class PokemonService {\r\n \r\n  static getPokemons(): Promise<Pokemon[]> {\r\n    return fetch('http://localhost:3001/pokemons')\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n  }\r\n \r\n  static getPokemon(id: number): Promise<Pokemon|null> {\r\n    return fetch(`http://localhost:3001/pokemons/${id}`)\r\n      .then(response => response.json())\r\n      .then(data => this.isEmpty(data) ? null : data)\r\n      .catch(error => this.handleError(error));\r\n  }\r\n\r\n  static updatePokemon(pokemon: Pokemon): Promise<Pokemon>{\r\n    return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(pokemon), \r\n        headers: {'Content-type': 'application/json'}\r\n    })\r\n    .then(response => response.json())\r\n    .catch(error => this.handleError(error));\r\n  }\r\n\r\n  static deletePokemon(pokemon: Pokemon): Promise<Pokemon>{\r\n    return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\r\n        method: 'DELETE',\r\n        headers: {'Content-type': 'application/json'}\r\n    })\r\n    .then(response => response.json())\r\n    .catch(error => this.handleError(error));\r\n    \r\n  }\r\n \r\n  static isEmpty(data: Object): boolean {\r\n    return Object.keys(data).length === 0;\r\n  }\r\n\r\n  static handleError(error: Error):void {\r\n      console.log(error);\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}