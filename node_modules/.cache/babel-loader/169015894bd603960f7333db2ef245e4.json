{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\c_mer\\\\OneDrive\\\\Documents\\\\formations\\\\Mes_projets\\\\react-profiles-app\\\\src\\\\components\\\\user-form.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport formatType from '../helpers/format-type';\nimport formatName from '../helpers/format-name';\nimport { useHistory } from 'react-router-dom';\nimport UserService from '../services/user-service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserForm = ({\n  user,\n  isEditForm\n}) => {\n  _s();\n\n  const [form, setForm] = useState({\n    picture: {\n      value: user.picture,\n      isValid: true\n    },\n    firstname: {\n      value: user.firstname,\n      isValid: true\n    },\n    lastname: {\n      value: user.lastname,\n      isValid: true\n    },\n    types: {\n      value: user.types,\n      isValid: true\n    }\n  });\n  const types = ['Direction', 'IT', 'Finance', 'Production', 'HR'];\n\n  const hasType = type => {\n    return form.types.value.includes(type);\n  };\n\n  const history = useHistory();\n\n  const handleInputChange = e => {\n    const fieldName = e.target.name;\n    const fieldValue = e.target.value;\n    const newField = {\n      [fieldName]: {\n        value: fieldValue\n      }\n    };\n    setForm({ ...form,\n      ...newField\n    });\n  };\n\n  const selectType = (type, e) => {\n    const checked = e.target.checked;\n    let newField;\n\n    if (checked) {\n      const newTypes = form.types.value.concat([type]);\n      newField = {\n        value: newTypes\n      };\n    } else {\n      const newTypes = form.types.value.filter(currentType => currentType !== type);\n      newField = {\n        value: newTypes\n      };\n    }\n\n    setForm({ ...form,\n      ...{\n        types: newField\n      }\n    });\n  };\n\n  const isAddForm = () => {\n    return !isEditForm;\n  };\n\n  const validateForm = () => {\n    let newForm = form; // profile picture validation rule\n\n    if (isAddForm()) {\n      const start = \"https://randomuser.me/\";\n      const end = \".jpg\";\n\n      if (!form.picture.value.startsWith(start) || !form.picture.value.endsWith(end)) {\n        const errorMsg = \"L'url n'est pas valide\";\n        const newField = {\n          value: form.picture.value,\n          error: errorMsg,\n          isValid: false\n        };\n        newForm = { ...form,\n          ...{\n            picture: newField\n          }\n        };\n      } else {\n        const newField = {\n          value: form.picture.value,\n          error: '',\n          isValid: true\n        };\n        newForm = { ...form,\n          ...{\n            picture: newField\n          }\n        };\n      }\n    } // firstname validation rule\n\n\n    if (!/^[a-zA-Zàéèêëüç-]{1,25}$/.test(form.firstname.value)) {\n      const errorMsg = ' Le prénom de l\\'utilisateur est requis et doit faire max 25 caractères.';\n      const newField = {\n        value: form.firstname.value,\n        error: errorMsg,\n        isValid: false\n      };\n      newForm = { ...newForm,\n        ...{\n          firstname: newField\n        }\n      };\n    } else {\n      const newField = {\n        value: form.firstname.value,\n        error: '',\n        isValid: true\n      };\n      newForm = { ...newForm,\n        ...{\n          firstname: newField\n        }\n      };\n    } // lastname validation rule\n\n\n    if (!/^[a-zA-Zàéèêëç-]{1,25}$/.test(form.lastname.value)) {\n      const errorMsg = ' Le nom de l\\'utilisateur est requis et doit faire max 25 caractères.';\n      const newField = {\n        value: form.lastname.value,\n        error: errorMsg,\n        isValid: false\n      };\n      newForm = { ...newForm,\n        ...{\n          lastname: newField\n        }\n      };\n    } else {\n      const newField = {\n        value: form.firstname.value,\n        error: '',\n        isValid: true\n      };\n      newForm = { ...newForm,\n        ...{\n          lastname: newField\n        }\n      };\n    }\n\n    setForm(newForm);\n    return newForm.firstname.isValid && newForm.lastname.isValid;\n  };\n\n  const isTypesValid = type => {\n    if (form.types.value.length === 1 && hasType(type)) {\n      return false;\n    }\n\n    if (form.types.value.length >= 3 && !hasType(type)) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault(); // console.log(form);\n\n    const isFormValid = validateForm();\n\n    if (isFormValid) {\n      user.picture = form.picture.value;\n      user.firstname = form.firstname.value;\n      user.lastname = form.lastname.value;\n      user.types = form.types.value;\n      isEditForm ? updateUser() : addUser();\n    }\n  };\n\n  const addUser = () => {\n    UserService.addUser(user).then(() => history.push('/users'));\n  };\n\n  const updateUser = () => {\n    UserService.updateUser(user).then(() => history.push(`/users/${user.id}`));\n  };\n\n  const deleteUser = () => {\n    UserService.deleteUser(user).then(() => history.push(`/users`));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: e => handleSubmit(e),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col s12 m8 offset-m2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card hoverable\",\n          children: [isEditForm && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-image\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: user.picture,\n              alt: user.lastname,\n              style: {\n                width: '250px',\n                margin: '0 auto'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"btn-floating halfway-fab waves-effect wave-light\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                onClick: deleteUser,\n                className: \"material-icons\",\n                children: \"delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 90\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-stacked\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-content\",\n              children: [isAddForm() && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"\",\n                  children: \"Photo de profil\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"picture\",\n                  name: \"picture\",\n                  type: \"text\",\n                  className: \"form-control\",\n                  value: form.picture.value,\n                  onChange: e => handleInputChange(e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 29\n                }, this), form.picture.error && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-panel red accent-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"material-icons text-red\",\n                    children: \"error\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 93\n                  }, this), form.picture.error]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 52\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"\",\n                  children: \"Pr\\xE9nom\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"firstname\",\n                  name: \"firstname\",\n                  type: \"text\",\n                  className: \"form-control\",\n                  value: formatName(form.firstname.value),\n                  onChange: e => handleInputChange(e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 29\n                }, this), form.firstname.error && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-panel red accent-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"material-icons text-red\",\n                    children: \"error\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 95\n                  }, this), form.firstname.error]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 54\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"hp\",\n                  children: \"Nom\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"lastname\",\n                  name: \"lastname\",\n                  type: \"text\",\n                  className: \"form-control\",\n                  value: formatName(form.lastname.value),\n                  onChange: e => handleInputChange(e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 29\n                }, this), form.lastname.error && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-panel red accent-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"material-icons text-red\",\n                    children: \"error\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 94\n                  }, this), form.lastname.error]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"D\\xE9partements\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 29\n                }, this), types.map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginBottom: '10px'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      id: type,\n                      name: \"type\",\n                      type: \"checkbox\",\n                      className: \"filled-in\",\n                      value: type,\n                      checked: hasType(type),\n                      onChange: e => selectType(type, e),\n                      disabled: !isTypesValid(type)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 203,\n                      columnNumber: 35\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: formatType(type),\n                        children: type\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 205,\n                        columnNumber: 37\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 204,\n                      columnNumber: 35\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 33\n                  }, this)\n                }, type, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 31\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-action center\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn\",\n                children: \"Valider\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserForm, \"/ZHIfpzzxWuQgTTjk/ctBYmGFac=\", false, function () {\n  return [useHistory];\n});\n\n_c = UserForm;\nexport default UserForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"sources":["C:/Users/c_mer/OneDrive/Documents/formations/Mes_projets/react-profiles-app/src/components/user-form.tsx"],"names":["React","useState","formatType","formatName","useHistory","UserService","UserForm","user","isEditForm","form","setForm","picture","value","isValid","firstname","lastname","types","hasType","type","includes","history","handleInputChange","e","fieldName","target","name","fieldValue","newField","selectType","checked","newTypes","concat","filter","currentType","isAddForm","validateForm","newForm","start","end","startsWith","endsWith","errorMsg","error","test","isTypesValid","length","handleSubmit","preventDefault","isFormValid","updateUser","addUser","then","push","id","deleteUser","width","margin","map","marginBottom"],"mappings":"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","sourcesContent":["import React, { FunctionComponent, useState } from 'react';\r\nimport User from '../models/user';\r\nimport formatType from '../helpers/format-type';\r\nimport formatName from '../helpers/format-name';\r\nimport { useHistory } from 'react-router-dom';  \r\nimport UserService from '../services/user-service';\r\n\r\ntype Props = {\r\n  user: User,\r\n  isEditForm: boolean\r\n};\r\n\r\ntype Field = {\r\n    value?: any,\r\n    error?: string,\r\n    isValid?: boolean\r\n};\r\n\r\ntype Form = {\r\n    picture: Field,\r\n    firstname: Field,\r\n    lastname: Field,\r\n    types: Field\r\n};\r\n  \r\nconst UserForm: FunctionComponent<Props> = ({user, isEditForm}) => {\r\n\r\n    const[form, setForm] = useState<Form>({\r\n        picture: {value: user.picture, isValid: true},\r\n        firstname: {value: user.firstname, isValid: true},\r\n        lastname: {value: user.lastname, isValid: true},\r\n        types: {value: user.types, isValid: true}\r\n    });\r\n  \r\n    const types: string[] = ['Direction', 'IT', 'Finance', 'Production', 'HR'];\r\n\r\n    const hasType = (type: string): boolean => {\r\n        return form.types.value.includes(type);\r\n    }\r\n\r\n    const history = useHistory();\r\n\r\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>):void => {\r\n        const fieldName: string = e.target.name;\r\n        const fieldValue: string = e.target.value;\r\n        const newField: Field = { [fieldName]: { value: fieldValue } };\r\n\r\n        setForm( {...form, ...newField} );\r\n    }\r\n\r\n    const selectType = (type: string, e: React.ChangeEvent<HTMLInputElement>): void => {\r\n        const checked = e.target.checked;\r\n        let newField: Field;\r\n\r\n        if(checked){\r\n            const newTypes: string[] = form.types.value.concat([type]);\r\n            newField = { value: newTypes };\r\n        }else{\r\n            const newTypes: string[] = form.types.value.filter((currentType: string) => currentType !== type);\r\n            newField = {value: newTypes };\r\n        }\r\n\r\n        setForm({...form, ...{ types: newField }});\r\n    }\r\n\r\n    const isAddForm = () => {\r\n      return !isEditForm;\r\n    }\r\n    \r\n    const validateForm = () => {\r\n      let newForm: Form = form;\r\n\r\n\r\n      // profile picture validation rule\r\n      if(isAddForm()){\r\n        const start = \"https://randomuser.me/\";\r\n        const end = \".jpg\";\r\n\r\n        if(!form.picture.value.startsWith(start) || !form.picture.value.endsWith(end)){\r\n          const errorMsg: string = \"L'url n'est pas valide\";\r\n          const newField: Field = {value: form.picture.value, error: errorMsg, isValid: false};\r\n          newForm = { ...form, ...{ picture: newField } };\r\n        }else {\r\n          const newField: Field = {value: form.picture.value, error: '', isValid: true};\r\n          newForm = { ...form, ...{ picture: newField } };\r\n        }\r\n      }\r\n      \r\n      // firstname validation rule\r\n      if(!/^[a-zA-Zàéèêëüç-]{1,25}$/.test(form.firstname.value)) {\r\n        const errorMsg: string = ' Le prénom de l\\'utilisateur est requis et doit faire max 25 caractères.';\r\n        const newField: Field = { value: form.firstname.value, error: errorMsg, isValid: false };\r\n        newForm = { ...newForm, ...{ firstname: newField } };\r\n      } else {\r\n        const newField: Field = { value: form.firstname.value, error: '', isValid: true };\r\n        newForm = { ...newForm, ...{ firstname: newField } };\r\n      }\r\n\r\n      // lastname validation rule\r\n      if(!/^[a-zA-Zàéèêëç-]{1,25}$/.test(form.lastname.value)) {\r\n        const errorMsg: string = ' Le nom de l\\'utilisateur est requis et doit faire max 25 caractères.';\r\n        const newField: Field = { value: form.lastname.value, error: errorMsg, isValid: false };\r\n        newForm = { ...newForm, ...{ lastname: newField } };\r\n      } else {\r\n        const newField: Field = { value: form.firstname.value, error: '', isValid: true };\r\n        newForm = { ...newForm, ...{ lastname: newField } };\r\n      }\r\n    \r\n      setForm(newForm);\r\n      return newForm.firstname.isValid && newForm.lastname.isValid;\r\n    }\r\n\r\n    const isTypesValid = (type: string): boolean => {\r\n\r\n      if (form.types.value.length === 1 && hasType(type)) {\r\n        return false;\r\n      }\r\n\r\n      if (form.types.value.length >= 3 && !hasType(type)) { \r\n        return false; \r\n      } \r\n\r\n      return true;\r\n    }\r\n\r\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) =>{\r\n      e.preventDefault();\r\n      // console.log(form);\r\n      const isFormValid = validateForm();\r\n      if (isFormValid) { \r\n        user.picture = form.picture.value;\r\n        user.firstname = form.firstname.value;\r\n        user.lastname = form.lastname.value;\r\n        user.types = form.types.value;\r\n\r\n        isEditForm ? updateUser() : addUser();\r\n        \r\n      }      \r\n    }\r\n\r\n    const addUser = () => {\r\n      UserService.addUser(user).then(() => history.push('/users'));\r\n    }\r\n\r\n    const updateUser = () =>{\r\n      UserService.updateUser(user).then(()=> history.push(`/users/${user.id}`));\r\n    }\r\n\r\n    const deleteUser = () => {\r\n      UserService.deleteUser(user).then(() => history.push(`/users`));\r\n    }\r\n\r\n\r\n  return (\r\n    <form onSubmit={ e => handleSubmit(e)}>\r\n\r\n        <div className=\"row\">\r\n\r\n            <div className=\"col s12 m8 offset-m2\">\r\n\r\n                <div className=\"card hoverable\"> \r\n\r\n                    {isEditForm && ( \r\n                    <div className=\"card-image\">\r\n                      <img src={user.picture} alt={user.lastname} style={{width: '250px', margin: '0 auto'}}/>\r\n                      <span className=\"btn-floating halfway-fab waves-effect wave-light\"><i onClick={deleteUser} className=\"material-icons\">delete</i></span>\r\n                    </div>\r\n                    )}\r\n\r\n                    <div className=\"card-stacked\">\r\n\r\n                        <div className=\"card-content\">\r\n\r\n                          {/* picture */}\r\n                          {isAddForm() && (\r\n                          <div className=\"form-group\">               \r\n                            <label htmlFor=\"\">Photo de profil</label>\r\n                            <input id=\"picture\" name=\"picture\" type=\"text\" className=\"form-control\" value={ form.picture.value } onChange={e => handleInputChange(e)}></input>\r\n                            {form.picture.error && <div className=\"card-panel red accent-1\"><i className=\"material-icons text-red\">error</i>{form.picture.error}</div>}\r\n                          </div>\r\n                          )}\r\n\r\n                          {/* firstname */}\r\n                          <div className=\"form-group\">               \r\n                            <label htmlFor=\"\">Prénom</label>\r\n                            <input id=\"firstname\" name=\"firstname\" type=\"text\" className=\"form-control\" value={ formatName(form.firstname.value) } onChange={e => handleInputChange(e)}></input>\r\n                            {form.firstname.error && <div className=\"card-panel red accent-1\"><i className=\"material-icons text-red\">error</i>{form.firstname.error}</div>}\r\n                          </div>\r\n\r\n                          {/*  lastname */}\r\n                          <div className=\"form-group\">\r\n                            <label htmlFor=\"hp\">Nom</label>\r\n                            <input id=\"lastname\" name=\"lastname\" type=\"text\" className=\"form-control\" value={ formatName(form.lastname.value)} onChange={e => handleInputChange(e)}></input>\r\n                            {form.lastname.error && <div className=\"card-panel red accent-1\"><i className=\"material-icons text-red\">error</i>{form.lastname.error}</div>}\r\n                          </div>\r\n\r\n                          {/* types */}\r\n                          <div className=\"form-group\"> \r\n                            <label>Départements</label>\r\n                            {types.map(type => (\r\n                              <div key={type} style={{marginBottom: '10px'}}>\r\n                                <label>\r\n                                  <input id={type} name=\"type\" type=\"checkbox\" className=\"filled-in\" value={type} checked={hasType(type)} onChange={ e => selectType(type, e)} disabled = {!isTypesValid(type)}></input>\r\n                                  <span>\r\n                                    <p className={formatType(type)}>{ type }</p>\r\n                                  </span>\r\n                                </label>\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"card-action center\">\r\n                          {/* Submit button */}\r\n                          <button type=\"submit\" className=\"btn\">Valider</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                  \r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </form>\r\n  );\r\n};\r\n   \r\nexport default UserForm;"]},"metadata":{},"sourceType":"module"}