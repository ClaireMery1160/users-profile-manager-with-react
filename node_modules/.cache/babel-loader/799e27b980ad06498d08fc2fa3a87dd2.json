{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\c_mer\\\\OneDrive\\\\Documents\\\\formations\\\\Udemy_React\\\\react-profiles-app\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport POKEMONS from './models/mock-pokemon'; // const App: React.FC = () => {\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // const name: String = 'React';\n  // const [name, setname] = useState<String>('React');\n  //ma version :\n  // const [pokemons] = useState<Array<Pokemon>>(POKEMONS);\n  const [pokemons, setPokemons] = useState([]);\n  useEffect(() => {\n    setPokemons(POKEMONS);\n  }, []);\n\n  const showPokemonCount = () => {\n    console.log(pokemons.length);\n  }; // passer un paramètre depuis l'interface - \n  //- gestionnaire d'événement : \n  // const showPokemonName = (p) => {\n  //     console.log(p);\n  // }\n  // passer une paramètre et un event depuis l'interface\n  //- gestionnaire d'événement : \n\n\n  const addPokemon = (name, e) => {\n    if (e.nativeEvent.which === 1) {\n      console.log(`Le pokemon ${name} a été ajouté avec le clic gauche`);\n    } else if (e.nativeEvent.which === 3) {\n      console.log(`Le pokemon ${name} a été ajouté avec le clic droit.`);\n    }\n\n    ;\n  }; // conditionner un affichage\n\n\n  const [age, setAge] = useState(22); //Conditionner un affichage\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pokedex\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: showPokemonCount,\n      children: \"Clique et Affiche le nombre de pokemons en console\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"H2jjXMQZ62V5Q9zFZaMPkif0GP0=\");\n\n_c = App;\nexport default App; // import React from  'react';\n// export default class App extends React.Component \n// {\n//     const mypseudo: string = \"React\";\n//     // a class member cannot have the const keyword\n//     render()\n//     {\n//         return <h1>Hello { mypseudo }</h1>;\n//     }\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/c_mer/OneDrive/Documents/formations/Udemy_React/react-profiles-app/src/App.tsx"],"names":["React","useEffect","useState","POKEMONS","App","pokemons","setPokemons","showPokemonCount","console","log","length","addPokemon","name","e","nativeEvent","which","age","setAge"],"mappings":";;;AAAA,OAAOA,KAAP,IAAmCC,SAAnC,EAA8CC,QAA9C,QAA8D,OAA9D;AAEA,OAAOC,QAAP,MAAqB,uBAArB,C,CAEA;;;;AACA,MAAMC,GAAsB,GAAG,MAC/B;AAAA;;AACI;AACA;AACA;AACA;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAY,EAAZ,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACVK,IAAAA,WAAW,CAACH,QAAD,CAAX;AACH,GAFQ,EAEN,EAFM,CAAT;;AAKA,QAAMI,gBAAgB,GAAG,MAAM;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACK,MAArB;AACH,GAFD,CAZJ,CAkBI;AACG;AACH;AACA;AACA;AAEA;AACG;;;AACH,QAAMC,UAAU,GAAG,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC5B,QAAIA,CAAC,CAACC,WAAF,CAAcC,KAAd,KAAwB,CAA5B,EAAgC;AAAEP,MAAAA,OAAO,CAACC,GAAR,CAAa,cAAaG,IAAK,mCAA/B;AAAmE,KAArG,MACK,IAAIC,CAAC,CAACC,WAAF,CAAcC,KAAd,KAAwB,CAA5B,EAA+B;AAAEP,MAAAA,OAAO,CAACC,GAAR,CAAa,cAAaG,IAAK,mCAA/B;AAAmE;;AAAA;AAC5G,GAHD,CA1BJ,CA+BI;;;AACA,QAAM,CAACI,GAAD,EAAMC,MAAN,IAAgBf,QAAQ,CAAS,EAAT,CAA9B,CAhCJ,CAiCI;;AAGA,sBACA;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAG,MAAA,OAAO,EAAEK,gBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAsBH,CA3DD;;GAAMH,G;;KAAAA,G;AA6DN,eAAeA,GAAf,C,CAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { FunctionComponent, useEffect, useState } from 'react';\r\nimport Pokemon from './models/pokemon';\r\nimport POKEMONS from './models/mock-pokemon';\r\n  \r\n// const App: React.FC = () => {\r\nconst App: FunctionComponent = () =>\r\n{\r\n    // const name: String = 'React';\r\n    // const [name, setname] = useState<String>('React');\r\n    //ma version :\r\n    // const [pokemons] = useState<Array<Pokemon>>(POKEMONS);\r\n    const [pokemons, setPokemons] = useState<Pokemon[]>([]);\r\n\r\n    useEffect(()=>{\r\n        setPokemons(POKEMONS);\r\n    }, []\r\n    );\r\n\r\n    const showPokemonCount = () => {\r\n        console.log(pokemons.length);\r\n    }\r\n\r\n   \r\n\r\n    // passer un paramètre depuis l'interface - \r\n       //- gestionnaire d'événement : \r\n    // const showPokemonName = (p) => {\r\n    //     console.log(p);\r\n    // }\r\n\r\n    // passer une paramètre et un event depuis l'interface\r\n       //- gestionnaire d'événement : \r\n    const addPokemon = (name, e) => {\r\n        if (e.nativeEvent.which === 1 ) { console.log(`Le pokemon ${name} a été ajouté avec le clic gauche`)}\r\n        else if (e.nativeEvent.which === 3) { console.log(`Le pokemon ${name} a été ajouté avec le clic droit.`)};\r\n    };\r\n\r\n    // conditionner un affichage\r\n    const [age, setAge] = useState<number>(22);\r\n    //Conditionner un affichage\r\n\r\n\r\n    return (\r\n    <div>\r\n        <h1>Pokedex</h1>\r\n        <p onClick={showPokemonCount}>Clique et Affiche le nombre de pokemons en console</p>\r\n        {/* <p onClick={showPokemonName(\"Carapuce\")}>Clique et affiche le nom Carapuce en console</p> */}\r\n        {/* <button onClick= { (e) => addPokemon(name, e) }>Ajouter un pokemon</button> */}\r\n\r\n    {/* // conditionner un affichage avec une simple condition équivalent if\r\n        <div>\r\n        { age> 18 &&\r\n          <p>Vous êtes majeur</p>\r\n        }\r\n        </div>\r\n\r\n    //Conditionner un affichage avec l'opérateur ternaire ? équivalent if ... else */}\r\n        {/* <div>\r\n            { age > 18 ? (Vouso etes majeur) : (Vous etes mineur) }\r\n        </div> */}\r\n\r\n    </div>\r\n    )\r\n\r\n}\r\n  \r\nexport default App;\r\n\r\n// import React from  'react';\r\n\r\n// export default class App extends React.Component \r\n// {\r\n//     const mypseudo: string = \"React\";\r\n//     // a class member cannot have the const keyword\r\n\r\n//     render()\r\n//     {\r\n//         return <h1>Hello { mypseudo }</h1>;\r\n//     }\r\n// }"]},"metadata":{},"sourceType":"module"}