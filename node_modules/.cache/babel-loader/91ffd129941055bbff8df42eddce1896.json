{"ast":null,"code":"export default class UserService {\n  static getUsers() {\n    return fetch('http://localhost:3001/users').then(response => response.json()).catch(error => this.handleError(error));\n  }\n\n  static getUser(id) {\n    return fetch(`http://localhost:3001/users/${id}`).then(response => response.json()).then(data => this.isEmpty(data) ? null : data).catch(error => this.handleError(error));\n  }\n\n  static updateUser(user) {\n    return fetch(`http://localhost:3001/users/${user.id}`, {\n      method: 'PUT',\n      body: JSON.stringify(user),\n      headers: {\n        'Content-type': 'application/json'\n      }\n    }).then(response => response.json()).catch(error => this.handleError(error));\n  }\n\n  static deleteUser(user) {\n    return fetch(`http://localhost:3001/users/${user.id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-type': 'application/json'\n      }\n    }).then(response => response.json()).catch(error => this.handleError(error));\n  }\n\n  static addUser(user) {\n    delete user.created;\n    return fetch(`http://localhost:3001/users`, {\n      method: 'POST',\n      body: JSON.stringify(user),\n      headers: {\n        'Content-type': 'application/json'\n      }\n    }).then(response => response.json());\n  }\n\n  static isEmpty(data) {\n    return Object.keys(data).length === 0;\n  }\n\n  static handleError(error) {\n    console.log(error);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/c_mer/OneDrive/Documents/formations/Mes_projets/react-profiles-app/src/services/user-service.ts"],"names":["UserService","getUsers","fetch","then","response","json","catch","error","handleError","getUser","id","data","isEmpty","updateUser","user","method","body","JSON","stringify","headers","deleteUser","addUser","created","Object","keys","length","console","log"],"mappings":"AAGA,eAAe,MAAMA,WAAN,CAAkB;AAEhB,SAARC,QAAQ,GAAoB;AACjC,WAAOC,KAAK,CAAC,6BAAD,CAAL,CACJC,IADI,CACCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADb,EAEJC,KAFI,CAEEC,KAAK,IAAI,KAAKC,WAAL,CAAiBD,KAAjB,CAFX,CAAP;AAGD;;AAEa,SAAPE,OAAO,CAACC,EAAD,EAAiC;AAC7C,WAAOR,KAAK,CAAE,+BAA8BQ,EAAG,EAAnC,CAAL,CACJP,IADI,CACCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADb,EAEJF,IAFI,CAECQ,IAAI,IAAI,KAAKC,OAAL,CAAaD,IAAb,IAAqB,IAArB,GAA4BA,IAFrC,EAGJL,KAHI,CAGEC,KAAK,IAAI,KAAKC,WAAL,CAAiBD,KAAjB,CAHX,CAAP;AAID;;AAEgB,SAAVM,UAAU,CAACC,IAAD,EAA2B;AAC1C,WAAOZ,KAAK,CAAE,+BAA8BY,IAAI,CAACJ,EAAG,EAAxC,EAA2C;AACnDK,MAAAA,MAAM,EAAE,KAD2C;AAEnDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAF6C;AAGnDK,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB;AAH0C,KAA3C,CAAL,CAKNhB,IALM,CAKDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EALX,EAMNC,KANM,CAMAC,KAAK,IAAI,KAAKC,WAAL,CAAiBD,KAAjB,CANT,CAAP;AAOD;;AAEgB,SAAVa,UAAU,CAACN,IAAD,EAAyB;AACxC,WAAOZ,KAAK,CAAE,+BAA8BY,IAAI,CAACJ,EAAG,EAAxC,EAA2C;AACnDK,MAAAA,MAAM,EAAE,QAD2C;AAEnDI,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB;AAF0C,KAA3C,CAAL,CAINhB,IAJM,CAIDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAJX,EAKNC,KALM,CAKAC,KAAK,IAAI,KAAKC,WAAL,CAAiBD,KAAjB,CALT,CAAP;AAMD;;AAEa,SAAPc,OAAO,CAACP,IAAD,EAA2B;AACvC,WAAOA,IAAI,CAACQ,OAAZ;AACA,WAAOpB,KAAK,CAAE,6BAAF,EAAgC;AAC1Ca,MAAAA,MAAM,EAAC,MADmC;AAE1CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAFoC;AAG1CK,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAHiC,KAAhC,CAAL,CAKNhB,IALM,CAKAC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EALZ,CAAP;AAMD;;AAEa,SAAPO,OAAO,CAACD,IAAD,EAAwB;AACpC,WAAOY,MAAM,CAACC,IAAP,CAAYb,IAAZ,EAAkBc,MAAlB,KAA6B,CAApC;AACD;;AAEiB,SAAXjB,WAAW,CAACD,KAAD,EAAoB;AAClCmB,IAAAA,OAAO,CAACC,GAAR,CAAYpB,KAAZ;AACH;;AAlD8B","sourcesContent":["import { pathToFileURL } from \"url\";\r\nimport User from \"../models/user\";\r\n \r\nexport default class UserService {\r\n \r\n  static getUsers(): Promise<User[]> {\r\n    return fetch('http://localhost:3001/users')\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n  }\r\n \r\n  static getUser(id: number): Promise<User|null> {\r\n    return fetch(`http://localhost:3001/users/${id}`)\r\n      .then(response => response.json())\r\n      .then(data => this.isEmpty(data) ? null : data)\r\n      .catch(error => this.handleError(error));\r\n  }\r\n\r\n  static updateUser(user: User): Promise<User>{\r\n    return fetch(`http://localhost:3001/users/${user.id}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(user), \r\n        headers: {'Content-type': 'application/json'}\r\n    })\r\n    .then(response => response.json())\r\n    .catch(error => this.handleError(error));\r\n  }\r\n\r\n  static deleteUser(user: User): Promise<{}>{\r\n    return fetch(`http://localhost:3001/users/${user.id}`, {\r\n        method: 'DELETE',\r\n        headers: {'Content-type': 'application/json'}\r\n    })\r\n    .then(response => response.json())\r\n    .catch(error => this.handleError(error)); \r\n  }\r\n\r\n  static addUser(user: User): Promise<User>{\r\n    delete user.created;\r\n    return fetch(`http://localhost:3001/users`, {\r\n      method:'POST',\r\n      body: JSON.stringify(user),\r\n      headers: { 'Content-type': 'application/json'}\r\n    })\r\n    .then (response => response.json())\r\n  }\r\n \r\n  static isEmpty(data: Object): boolean {\r\n    return Object.keys(data).length === 0;\r\n  }\r\n\r\n  static handleError(error: Error):void {\r\n      console.log(error);\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}