{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\c_mer\\\\OneDrive\\\\Documents\\\\formations\\\\Udemy_React\\\\react-profiles-app\\\\src\\\\App.tsx\";\nimport React from 'react';\nimport PokemonList from './pages/pokemon-list'; // const App: React.FC = () => {\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  // const name: String = 'React';\n  // const [name, setname] = useState<String>('React');\n  //ma version :\n  // const [pokemons] = useState<Array<Pokemon>>(POKEMONS);\n  // const [pokemons, setPokemons] = useState<Pokemon[]>([]);\n  // useEffect(()=>{\n  //     setPokemons(POKEMONS);\n  // }, []\n  // );\n  // const showPokemonCount = () => {\n  //     console.log(pokemons.length);\n  // }\n  // passer un paramètre depuis l'interface - \n  //- gestionnaire d'événement : \n  // const showPokemonName = (p) => {\n  //     console.log(p);\n  // }\n  // passer une paramètre et un event depuis l'interface\n  //- gestionnaire d'événement : \n  // const addPokemon = (name, e) => {\n  //     if (e.nativeEvent.which === 1 ) { console.log(`Le pokemon ${name} a été ajouté avec le clic gauche`)}\n  //     else if (e.nativeEvent.which === 3) { console.log(`Le pokemon ${name} a été ajouté avec le clic droit.`)};\n  // };\n  // conditionner un affichage\n  // const [age, setAge] = useState<number>(22);\n  return /*#__PURE__*/_jsxDEV(PokemonList, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this) // <div className=\"container\">\n  //     <div className=\"row\">\n  //         <div className=\"col 12\">\n  //             <h1 className=\"center\">Pokedex</h1>\n  //                                 {/* <p onClick={ showPokemonCount}>Clique et Affiche le nombre de pokemons en console</p> */}\n  //                                 {/* <p onClick={showPokemonName(\"Carapuce\")}>Clique et affiche le nom Carapuce en console</p> */}\n  //                                 {/* <button onClick= { (e) => addPokemon(name, e) }>Ajouter un pokemon</button> */}\n  //                                 {/* conditionner un affichage avec une simple condition équivalent if\n  //                                 <div>\n  //                                     { \n  //                                         age> 18 &&\n  //                                         <p>Vous êtes majeur</p>\n  //                                     }\n  //                                 </div> */}\n  //                                 {/* conditionner un affichage avec un opérateur ternaire ?  équivalent if else\n  //                                 <div>\n  //                                     { age > 18 ? (Vouso etes majeur) : (Vous etes mineur) }\n  //                                 </div>  */}\n  //             <br />\n  //             <h2 className=\"center\">Liste des profils </h2>\n  //                 <div className=\"z-depth-5\">\n  //                 { pokemons.map( ({id, name, picture, created}) => ( \n  //                     <div className=\"col s6 m4\" key ={id} >\n  //                         <div className=\"card horizontal\">\n  //                             <div className=\"card-image\">\n  //                                 <img src={ picture } alt={name} className=\"circle\"/>\n  //                             </div>\n  //                             <div className=\"card-stacked\">\n  //                                 <div className=\"card-content\">\n  //                                     <h6>{ name } </h6>\n  //                                     <p><small>created on {created.toString()} </small></p>\n  //                                     <a href=\"#!\" className=\"secondary-content\"><i className=\"material-icons\">grade</i></a>\n  //                                 </div>\n  //                             </div>                                    \n  //                        </div>                         \n  //                     </div> \n  //                 ))} \n  //                 </div>          \n  //         </div>\n  //     </div>\n  // </div>\n  ;\n};\n\n_c = App;\nexport default App; // import React from  'react';\n// export default class App extends React.Component \n// {\n//     const mypseudo: string = \"React\";\n//     // a class member cannot have the const keyword\n//     render()\n//     {\n//         return <h1>Hello { mypseudo }</h1>;\n//     }\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/c_mer/OneDrive/Documents/formations/Udemy_React/react-profiles-app/src/App.tsx"],"names":["React","PokemonList","App"],"mappings":";AAAA,OAAOA,KAAP,MAA8D,OAA9D;AAGA,OAAOC,WAAP,MAAwB,sBAAxB,C,CAEA;;;;AACA,MAAMC,GAAsB,GAAG,MAC/B;AACoB;AACA;AACA;AACA;AAEhB;AAEA;AACA;AACA;AACA;AAEoB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGpB,sBACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,UADJ,CAGA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAtDA;AAyDH,CA5FD;;KAAMA,G;AA8FN,eAAeA,GAAf,C,CAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { FunctionComponent, useEffect, useState } from 'react';\r\nimport Pokemon from './models/pokemon';\r\nimport POKEMONS from './models/mock-pokemon';\r\nimport PokemonList from './pages/pokemon-list';\r\n  \r\n// const App: React.FC = () => {\r\nconst App: FunctionComponent = () =>\r\n{\r\n                    // const name: String = 'React';\r\n                    // const [name, setname] = useState<String>('React');\r\n                    //ma version :\r\n                    // const [pokemons] = useState<Array<Pokemon>>(POKEMONS);\r\n\r\n    // const [pokemons, setPokemons] = useState<Pokemon[]>([]);\r\n\r\n    // useEffect(()=>{\r\n    //     setPokemons(POKEMONS);\r\n    // }, []\r\n    // );\r\n\r\n                        // const showPokemonCount = () => {\r\n                        //     console.log(pokemons.length);\r\n                        // }\r\n\r\n                        // passer un paramètre depuis l'interface - \r\n                        //- gestionnaire d'événement : \r\n                        // const showPokemonName = (p) => {\r\n                        //     console.log(p);\r\n                        // }\r\n\r\n                        // passer une paramètre et un event depuis l'interface\r\n                        //- gestionnaire d'événement : \r\n                        // const addPokemon = (name, e) => {\r\n                        //     if (e.nativeEvent.which === 1 ) { console.log(`Le pokemon ${name} a été ajouté avec le clic gauche`)}\r\n                        //     else if (e.nativeEvent.which === 3) { console.log(`Le pokemon ${name} a été ajouté avec le clic droit.`)};\r\n                        // };\r\n\r\n                        // conditionner un affichage\r\n                        // const [age, setAge] = useState<number>(22);\r\n\r\n\r\n    return (\r\n        <PokemonList />\r\n\r\n    // <div className=\"container\">\r\n\r\n    //     <div className=\"row\">\r\n\r\n    //         <div className=\"col 12\">\r\n\r\n    //             <h1 className=\"center\">Pokedex</h1>\r\n\r\n    //                                 {/* <p onClick={ showPokemonCount}>Clique et Affiche le nombre de pokemons en console</p> */}\r\n\r\n    //                                 {/* <p onClick={showPokemonName(\"Carapuce\")}>Clique et affiche le nom Carapuce en console</p> */}\r\n    //                                 {/* <button onClick= { (e) => addPokemon(name, e) }>Ajouter un pokemon</button> */}\r\n\r\n    //                                 {/* conditionner un affichage avec une simple condition équivalent if\r\n    //                                 <div>\r\n    //                                     { \r\n    //                                         age> 18 &&\r\n    //                                         <p>Vous êtes majeur</p>\r\n    //                                     }\r\n    //                                 </div> */}\r\n\r\n    //                                 {/* conditionner un affichage avec un opérateur ternaire ?  équivalent if else\r\n    //                                 <div>\r\n    //                                     { age > 18 ? (Vouso etes majeur) : (Vous etes mineur) }\r\n    //                                 </div>  */}\r\n    //             <br />\r\n    //             <h2 className=\"center\">Liste des profils </h2>\r\n\r\n    //                 <div className=\"z-depth-5\">\r\n    //                 { pokemons.map( ({id, name, picture, created}) => ( \r\n    //                     <div className=\"col s6 m4\" key ={id} >\r\n    //                         <div className=\"card horizontal\">\r\n    //                             <div className=\"card-image\">\r\n    //                                 <img src={ picture } alt={name} className=\"circle\"/>\r\n    //                             </div>\r\n    //                             <div className=\"card-stacked\">\r\n    //                                 <div className=\"card-content\">\r\n    //                                     <h6>{ name } </h6>\r\n    //                                     <p><small>created on {created.toString()} </small></p>\r\n    //                                     <a href=\"#!\" className=\"secondary-content\"><i className=\"material-icons\">grade</i></a>\r\n    //                                 </div>\r\n    //                             </div>                                    \r\n    //                        </div>                         \r\n    //                     </div> \r\n    //                 ))} \r\n    //                 </div>          \r\n\r\n    //         </div>\r\n\r\n    //     </div>\r\n\r\n    // </div>\r\n    )\r\n\r\n}\r\n  \r\nexport default App;\r\n\r\n// import React from  'react';\r\n\r\n// export default class App extends React.Component \r\n// {\r\n//     const mypseudo: string = \"React\";\r\n//     // a class member cannot have the const keyword\r\n\r\n//     render()\r\n//     {\r\n//         return <h1>Hello { mypseudo }</h1>;\r\n//     }\r\n// }"]},"metadata":{},"sourceType":"module"}