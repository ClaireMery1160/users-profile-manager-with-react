{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\c_mer\\\\OneDrive\\\\Documents\\\\Actiris\\\\candidatures\\\\2021\\\\juin21\\\\Besedo\\\\react-profiles-app\\\\src\\\\components\\\\user-form.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport formatType from '../helpers/format-type';\nimport { useHistory } from 'react-router-dom';\nimport UserService from '../services/user-service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserForm = ({\n  user\n}) => {\n  _s();\n\n  const [form, setForm] = useState({\n    name: {\n      value: user.name,\n      isValid: true\n    },\n    hp: {\n      value: user.hp,\n      isValid: true\n    },\n    cp: {\n      value: user.cp,\n      isValid: true\n    },\n    types: {\n      value: user.types,\n      isValid: true\n    }\n  });\n  const types = ['Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik', 'Poison', 'Fée', 'Vol', 'Combat', 'Psy'];\n\n  const hasType = type => {\n    return form.types.value.includes(type);\n  };\n\n  const history = useHistory();\n\n  const handleInputChange = e => {\n    const fieldName = e.target.name;\n    const fieldValue = e.target.value;\n    const newField = {\n      [fieldName]: {\n        value: fieldValue\n      }\n    };\n    setForm({ ...form,\n      ...newField\n    });\n  };\n\n  const selectType = (type, e) => {\n    const checked = e.target.checked;\n    let newField;\n\n    if (checked) {\n      const newTypes = form.types.value.concat([type]);\n      newField = {\n        value: newTypes\n      };\n    } else {\n      const newTypes = form.types.value.filter(currentType => currentType !== type);\n      newField = {\n        value: newTypes\n      };\n    }\n\n    setForm({ ...form,\n      ...{\n        types: newField\n      }\n    });\n  };\n\n  const validateForm = () => {\n    let newForm = form;\n\n    if (!/^[a-zA-Zàéèêëç-]{2,25}$/.test(form.name.value)) {\n      const errorMsg = ' Le nom de l\\'utilisateur est requis et doit faire entre 2 et 25 caractères.';\n      const newField = {\n        value: form.name.value,\n        error: errorMsg,\n        isValid: false\n      };\n      newForm = { ...newForm,\n        ...{\n          name: newField\n        }\n      };\n    } else {\n      const newField = {\n        value: form.name.value,\n        error: '',\n        isValid: true\n      };\n      newForm = { ...newForm,\n        ...{\n          name: newField\n        }\n      };\n    } //field hp\n\n\n    if (!/^[0-9]{1,3}$/.test(form.hp.value)) {\n      const errorMsg = ' Les points sont compris entre 0 et 999.';\n      const newField = {\n        value: form.hp.value,\n        error: errorMsg,\n        isValid: false\n      };\n      newForm = { ...newForm,\n        ...{\n          hp: newField\n        }\n      };\n    } else {\n      const newField = {\n        value: form.hp.value,\n        error: '',\n        isValid: true\n      };\n      newForm = { ...newForm,\n        ...{\n          hp: newField\n        }\n      };\n    } // field cp\n\n\n    if (!/^[0-9]{1,2}$/.test(form.cp.value)) {\n      const errorMsg = ' Les cp doivent être compris entre 0 et 99.';\n      const newField = {\n        value: form.cp.value,\n        error: errorMsg,\n        isValid: false\n      };\n      newForm = { ...newForm,\n        ...{\n          cp: newField\n        }\n      };\n    } else {\n      const newField = {\n        value: form.cp.value,\n        error: '',\n        isValid: true\n      };\n      newForm = { ...newForm,\n        ...{\n          cp: newField\n        }\n      };\n    }\n\n    setForm(newForm);\n    return newForm.name.isValid && newForm.hp.isValid && newForm.cp.isValid;\n  };\n\n  const isTypesValid = type => {\n    if (form.types.value.length === 1 && hasType(type)) {\n      return false;\n    }\n\n    if (form.types.value.length >= 3 && !hasType(type)) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault(); // console.log(form);\n\n    const isFormValid = validateForm();\n\n    if (isFormValid) {\n      user.name = form.name.value;\n      user.hp = form.hp.value;\n      user.cp = form.cp.value;\n      user.types = form.types.value;\n      UserService.updateUser(user).then(() => history.push(`/users/${user.id}`));\n    }\n  };\n\n  const deleteUser = () => {\n    UserService.deleteUser(user).then(() => history.push(`/users`));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: e => handleSubmit(e),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col s12 m8 offset-m2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card hoverable\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-image\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: user.picture,\n              alt: user.name,\n              style: {\n                width: '250px',\n                margin: '0 auto'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"btn-floating halfway-fab waves-effect wave-light\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                onClick: deleteUser,\n                className: \"material-icons\",\n                children: \"delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 82\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-stacked\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"name\",\n                  children: \"Nom\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"name\",\n                  name: \"name\",\n                  type: \"text\",\n                  className: \"form-control\",\n                  value: form.name.value,\n                  onChange: e => handleInputChange(e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 19\n                }, this), form.name.error && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-panel red accent-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"material-icons text-red\",\n                    children: \"error\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 80\n                  }, this), form.name.error]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 39\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"hp\",\n                  children: \"Point de vie\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"hp\",\n                  name: \"hp\",\n                  type: \"number\",\n                  className: \"form-control\",\n                  value: form.hp.value,\n                  onChange: e => handleInputChange(e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 19\n                }, this), form.hp.error && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-panel red accent-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"material-icons text-red\",\n                    children: \"error\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 78\n                  }, this), form.hp.error]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"cp\",\n                  children: \"D\\xE9g\\xE2ts\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"cp\",\n                  name: \"cp\",\n                  type: \"number\",\n                  className: \"form-control\",\n                  value: form.cp.value,\n                  onChange: e => handleInputChange(e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 19\n                }, this), form.cp.error && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-panel red accent-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"material-icons text-red\",\n                    children: \"error\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 78\n                  }, this), form.cp.error]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Types\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 19\n                }, this), types.map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginBottom: '10px'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      id: type,\n                      name: \"type\",\n                      type: \"checkbox\",\n                      className: \"filled-in\",\n                      value: type,\n                      checked: hasType(type),\n                      onChange: e => selectType(type, e),\n                      disabled: !isTypesValid(type)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 165,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: formatType(type),\n                        children: type\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 167,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 166,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 23\n                  }, this)\n                }, type, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-action center\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn\",\n                children: \"Valider\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserForm, \"DVnZvZ9U5C41tLe7SnTgWIw8Zyo=\", false, function () {\n  return [useHistory];\n});\n\n_c = UserForm;\nexport default UserForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"sources":["C:/Users/c_mer/OneDrive/Documents/Actiris/candidatures/2021/juin21/Besedo/react-profiles-app/src/components/user-form.tsx"],"names":["React","useState","formatType","useHistory","UserService","UserForm","user","form","setForm","name","value","isValid","hp","cp","types","hasType","type","includes","history","handleInputChange","e","fieldName","target","fieldValue","newField","selectType","checked","newTypes","concat","filter","currentType","validateForm","newForm","test","errorMsg","error","isTypesValid","length","handleSubmit","preventDefault","isFormValid","updateUser","then","push","id","deleteUser","picture","width","margin","map","marginBottom"],"mappings":"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","sourcesContent":["import React, { FunctionComponent, useState } from 'react';\r\nimport User from '../models/user';\r\nimport formatType from '../helpers/format-type';\r\nimport { useHistory } from 'react-router-dom';  \r\nimport UserService from '../services/user-service';\r\n\r\ntype Props = {\r\n  user: User\r\n};\r\n\r\ntype Field = {\r\n    value?: any,\r\n    error?: string,\r\n    isValid?: boolean\r\n};\r\n\r\ntype Form = {\r\n    name: Field,\r\n    hp: Field,\r\n    cp: Field,\r\n    types: Field\r\n};\r\n  \r\nconst UserForm: FunctionComponent<Props> = ({user}) => {\r\n\r\n    const[form, setForm] = useState<Form>({\r\n        name: {value: user.name, isValid: true},\r\n        hp: {value: user.hp, isValid: true},\r\n        cp: {value: user.cp, isValid: true},\r\n        types: {value: user.types, isValid: true}\r\n    });\r\n  \r\n    const types: string[] = ['Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik','Poison', 'Fée', 'Vol', 'Combat', 'Psy'];\r\n\r\n    const hasType = (type: string): boolean => {\r\n        return form.types.value.includes(type);\r\n    }\r\n\r\n    const history = useHistory();\r\n\r\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>):void => {\r\n        const fieldName: string = e.target.name;\r\n        const fieldValue: string = e.target.value;\r\n        const newField: Field = { [fieldName]: { value: fieldValue } };\r\n\r\n        setForm( {...form, ...newField} );\r\n    }\r\n\r\n    const selectType = (type: string, e: React.ChangeEvent<HTMLInputElement>): void => {\r\n        const checked = e.target.checked;\r\n        let newField: Field;\r\n\r\n        if(checked){\r\n            const newTypes: string[] = form.types.value.concat([type]);\r\n            newField = { value: newTypes };\r\n        }else{\r\n            const newTypes: string[] = form.types.value.filter((currentType: string) => currentType !== type);\r\n            newField = {value: newTypes };\r\n        }\r\n\r\n        setForm({...form, ...{ types: newField }});\r\n    }\r\n\r\n    const validateForm = () => {\r\n      let newForm: Form = form;\r\n\r\n      if(!/^[a-zA-Zàéèêëç-]{2,25}$/.test(form.name.value)) {\r\n        const errorMsg: string = ' Le nom de l\\'utilisateur est requis et doit faire entre 2 et 25 caractères.';\r\n        const newField: Field = { value: form.name.value, error: errorMsg, isValid: false };\r\n        newForm = { ...newForm, ...{ name: newField } };\r\n      } else {\r\n        const newField: Field = { value: form.name.value, error: '', isValid: true };\r\n        newForm = { ...newForm, ...{ name: newField } };\r\n      }\r\n\r\n      //field hp\r\n      if(!/^[0-9]{1,3}$/.test(form.hp.value)) {\r\n        const errorMsg: string = ' Les points sont compris entre 0 et 999.';\r\n        const newField: Field = {value: form.hp.value, error: errorMsg, isValid: false};\r\n        newForm = { ...newForm, ...{ hp: newField } };\r\n      } else {\r\n        const newField: Field = { value: form.hp.value, error: '', isValid: true };\r\n        newForm = { ...newForm, ...{ hp: newField } };\r\n      }\r\n        // field cp\r\n      if(!/^[0-9]{1,2}$/.test(form.cp.value)) {\r\n        const errorMsg: string = ' Les cp doivent être compris entre 0 et 99.';\r\n        const newField: Field = {value: form.cp.value, error: errorMsg, isValid: false};\r\n        newForm = { ...newForm, ...{ cp: newField } };\r\n      } else {\r\n        const newField: Field = { value: form.cp.value, error: '', isValid: true };\r\n        newForm = { ...newForm, ...{ cp: newField } };\r\n      }\r\n    \r\n      setForm(newForm);\r\n      return newForm.name.isValid && newForm.hp.isValid && newForm.cp.isValid;\r\n    }\r\n\r\n    const isTypesValid = (type: string): boolean => {\r\n\r\n      if (form.types.value.length === 1 && hasType(type)) {\r\n        return false;\r\n      }\r\n\r\n      if (form.types.value.length >= 3 && !hasType(type)) { \r\n        return false; \r\n      } \r\n\r\n      return true;\r\n    }\r\n\r\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) =>{\r\n      e.preventDefault();\r\n      // console.log(form);\r\n      const isFormValid = validateForm();\r\n      if (isFormValid) { \r\n        user.name = form.name.value;\r\n        user.hp = form.hp.value;\r\n        user.cp = form.cp.value;\r\n        user.types = form.types.value;\r\n        UserService.updateUser(user).then(() => history.push(`/users/${user.id}`)); \r\n      }      \r\n    }\r\n\r\n    const deleteUser = () => {\r\n      UserService.deleteUser(user).then(() => history.push(`/users`));\r\n    }\r\n\r\n\r\n  return (\r\n    <form onSubmit={ e => handleSubmit(e)}>\r\n      <div className=\"row\">\r\n        <div className=\"col s12 m8 offset-m2\">\r\n          <div className=\"card hoverable\"> \r\n            <div className=\"card-image\">\r\n              <img src={user.picture} alt={user.name} style={{width: '250px', margin: '0 auto'}}/>\r\n              <span className=\"btn-floating halfway-fab waves-effect wave-light\"><i onClick={deleteUser} className=\"material-icons\">delete</i></span>\r\n            </div>\r\n            <div className=\"card-stacked\">\r\n              <div className=\"card-content\">\r\n                {/* name */}\r\n                <div className=\"form-group\">               \r\n                  <label htmlFor=\"name\">Nom</label>\r\n                  <input id=\"name\" name=\"name\" type=\"text\" className=\"form-control\" value={form.name.value} onChange={e => handleInputChange(e)}></input>\r\n                  {form.name.error && <div className=\"card-panel red accent-1\"><i className=\"material-icons text-red\">error</i>{form.name.error}</div>}\r\n                </div>\r\n                {/*  hp */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"hp\">Point de vie</label>\r\n                  <input id=\"hp\" name=\"hp\" type=\"number\" className=\"form-control\" value={form.hp.value} onChange={e => handleInputChange(e)}></input>\r\n                  {form.hp.error && <div className=\"card-panel red accent-1\"><i className=\"material-icons text-red\">error</i>{form.hp.error}</div>}\r\n                </div>\r\n                {/* cp */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"cp\">Dégâts</label>\r\n                  <input id=\"cp\" name=\"cp\" type=\"number\" className=\"form-control\" value={form.cp.value} onChange={e => handleInputChange(e)}></input>\r\n                  {form.cp.error && <div className=\"card-panel red accent-1\"><i className=\"material-icons text-red\">error</i>{form.cp.error}</div>}\r\n                </div>\r\n                {/* types */}\r\n                <div className=\"form-group\"> \r\n                  <label>Types</label>\r\n                  {types.map(type => (\r\n                    <div key={type} style={{marginBottom: '10px'}}>\r\n                      <label>\r\n                        <input id={type} name=\"type\" type=\"checkbox\" className=\"filled-in\" value={type} checked={hasType(type)} onChange={ e => selectType(type, e)} disabled = {!isTypesValid(type)}></input>\r\n                        <span>\r\n                          <p className={formatType(type)}>{ type }</p>\r\n                        </span>\r\n                      </label>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <div className=\"card-action center\">\r\n                {/* Submit button */}\r\n                <button type=\"submit\" className=\"btn\">Valider</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n   \r\nexport default UserForm;"]},"metadata":{},"sourceType":"module"}